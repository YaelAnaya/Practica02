/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testgraphics;

import java.awt.*;
import java.util.ArrayList;
import javax.swing.*;

/**
 * * @author yaelanaya
 */
public class DemoFrame extends javax.swing.JFrame {

    //Bandera que nos indica si solo se motraran las figuras dentro del limite.
    private boolean justInBounds;

    public DemoFrame() {
        initComponents();
        justInBounds = false;
    }

    //Con este método se verifica si la figura en el tope está o no dentro del límite,
    //mostrando el estado en un TextField.
    private void showIfIsOutOfBounds() {
        if (panel.isPeekOutOfBounds()) {
            boundsTextField.setText("Excede Limite");
        } else {
            boundsTextField.setText("Dentro del Limite");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new testgraphics.TestGraphics();
        jPanel1 = new javax.swing.JPanel();
        boundsTextField = new javax.swing.JTextField();
        squareButton = new javax.swing.JButton();
        triangleButton = new javax.swing.JButton();
        circleButton = new javax.swing.JButton();
        spiralButton = new javax.swing.JButton();
        polygonButton = new javax.swing.JButton();
        squareCheckBox = new javax.swing.JCheckBox();
        circleCheckBox = new javax.swing.JCheckBox();
        triangleCheckBox = new javax.swing.JCheckBox();
        spiralCheckBox = new javax.swing.JCheckBox();
        polygonCheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        drawButton = new javax.swing.JButton();
        invertedButton = new javax.swing.JButton();
        boundsToggleButton = new javax.swing.JToggleButton();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("[Test Figures]");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 300, 300));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(480, 280));

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setPreferredSize(new java.awt.Dimension(937, 533));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 937, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 533, Short.MAX_VALUE)
        );

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        boundsTextField.setEditable(false);
        boundsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        boundsTextField.setText("Sin figuras aún");
        boundsTextField.setFocusable(false);
        boundsTextField.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(boundsTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 120, -1));

        squareButton.setText("Cuadrado");
        squareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareButtonActionPerformed(evt);
            }
        });
        jPanel1.add(squareButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 100, -1));

        triangleButton.setText("Tríangulo");
        triangleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                triangleButtonActionPerformed(evt);
            }
        });
        jPanel1.add(triangleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 100, -1));

        circleButton.setText("Círculo");
        circleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circleButtonActionPerformed(evt);
            }
        });
        jPanel1.add(circleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 100, -1));

        spiralButton.setText("Espiral");
        spiralButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spiralButtonActionPerformed(evt);
            }
        });
        jPanel1.add(spiralButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 100, -1));

        polygonButton.setText("Poligono");
        polygonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                polygonButtonActionPerformed(evt);
            }
        });
        jPanel1.add(polygonButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 100, -1));

        squareCheckBox.setSelected(true);
        squareCheckBox.setText("Cuadrados");
        squareCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareCheckBoxActionPerformed(evt);
            }
        });
        jPanel1.add(squareCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        circleCheckBox.setSelected(true);
        circleCheckBox.setText("Círculos");
        circleCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circleCheckBoxActionPerformed(evt);
            }
        });
        jPanel1.add(circleCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));

        triangleCheckBox.setSelected(true);
        triangleCheckBox.setText("Tríangulos");
        triangleCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                triangleCheckBoxActionPerformed(evt);
            }
        });
        jPanel1.add(triangleCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        spiralCheckBox.setSelected(true);
        spiralCheckBox.setText("Espirales");
        spiralCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spiralCheckBoxActionPerformed(evt);
            }
        });
        jPanel1.add(spiralCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        polygonCheckBox.setSelected(true);
        polygonCheckBox.setText("Poligonos");
        polygonCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                polygonCheckBoxActionPerformed(evt);
            }
        });
        jPanel1.add(polygonCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        drawButton.setText("Dibujar Stack ");
        drawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawButtonActionPerformed(evt);
            }
        });
        jPanel2.add(drawButton);

        invertedButton.setText("Dibujar Stack Inverso");
        invertedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invertedButtonActionPerformed(evt);
            }
        });
        jPanel2.add(invertedButton);

        boundsToggleButton.setText("Dentro del Limite");
        boundsToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boundsToggleButtonActionPerformed(evt);
            }
        });
        jPanel2.add(boundsToggleButton);

        clearButton.setText("Limpiar");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        jPanel2.add(clearButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Con este método dibujamos los elementos del Stack en sentido inverso,
    //también verifica si se aceptan figuras fuera de los limites.
    private void invertedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invertedButtonActionPerformed
        if (justInBounds)
            panel.drawinBounds(true);

        else
            panel.drawFigures(true);
    }//GEN-LAST:event_invertedButtonActionPerformed

    //Con este metodo borramos lo que está dibujado en el panel y vaciamos los Stacks.
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        panel.clear();
        repaint();
        boundsTextField.setText("Sin figuras aún");
    }//GEN-LAST:event_clearButtonActionPerformed

    //Con este método dibujamos los elementos del Stack,
    //también verifica si se aceptan figuras fuera de los limites.
    private void drawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawButtonActionPerformed
        if (justInBounds)
            panel.drawinBounds(false);
        else
            panel.drawFigures(false);
    }//GEN-LAST:event_drawButtonActionPerformed

    /**
     * En estos eventos, se despliegan las ventanas de dialogo con las que
     * obtenemos los datos propocionados por el usario, y con ellos creamos y
     * guardamos las figuras correspondientes, también verificamos si están
     * fuera de los limites.
     */

    private void polygonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_polygonButtonActionPerformed
        PolygonDialog polygon = new PolygonDialog(this, true);
        polygon.setVisible(true);
        panel.addIrregularPolygon(new IrregularPolygon(polygon.getxPoints(), polygon.getyPoints(), polygon.getPointCounter(), polygon.getColor()));
        showIfIsOutOfBounds();

    }//GEN-LAST:event_polygonButtonActionPerformed

    private void spiralButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spiralButtonActionPerformed
        DataDialog data = new DataDialog(this, true, true);
        data.setVisible(true);
        if (data.getXPosition() > 0 && data.getYPosition() > 0 && data.getFigureSize() > 0) {
            panel.addSpiral(new Spiral(data.getXPosition(), data.getYPosition(), data.getFigureSize(), data.getFigureIncrement(), data.getFigureRadium(), data.getColor()));
        }
        showIfIsOutOfBounds();
    }//GEN-LAST:event_spiralButtonActionPerformed

    private void triangleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_triangleButtonActionPerformed
        DataDialog data = new DataDialog(this, true, false);
        data.setVisible(true);
        if (data.getXPosition() > 0 && data.getYPosition() > 0 && data.getFigureSize() > 0) {
            panel.addTriangle(new Triangle(data.getXPosition(), data.getYPosition(), data.getFigureSize(), data.getColor()));
        }
        showIfIsOutOfBounds();

    }//GEN-LAST:event_triangleButtonActionPerformed

    private void circleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circleButtonActionPerformed
        DataDialog data = new DataDialog(this, true, false);
        data.setVisible(true);
        if (data.getXPosition() > 0 && data.getYPosition() > 0 && data.getFigureSize() > 0) {
            panel.addCircle(new Circle(data.getXPosition(), data.getYPosition(), data.getFigureSize(), data.getColor()));
        }
        showIfIsOutOfBounds();
    }//GEN-LAST:event_circleButtonActionPerformed

    private void squareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareButtonActionPerformed
        // TODO add your handling code here:
        DataDialog data = new DataDialog(this, true, false);
        data.setVisible(true);
        if (data.getXPosition() > 0 && data.getYPosition() > 0 && data.getFigureSize() > 0) {
            panel.addSquare(new Square(data.getXPosition(), data.getYPosition(), data.getFigureSize(), data.getColor()));
        }
        showIfIsOutOfBounds();
    }//GEN-LAST:event_squareButtonActionPerformed

    /**
     * Con este boton lo que hacemos es verificar si está clickeado el
     * ToogleBotton o no, si lo está solo dibuja figuras dentro de los limites y
     * cambia la bandera, para que solo se puedan dibujar figuras en los
     * limites, al soltar el boton se cambia la bandera a falso y ya se puede
     * dibujar fuera de los limites.
     */
    private void boundsToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boundsToggleButtonActionPerformed
        // TODO add your handling code here:
        if (boundsToggleButton.isSelected()) {
            panel.drawinBounds(false);
            justInBounds = true;
        } else {
            justInBounds = false;
            panel.drawFigures(false);
        }

    }//GEN-LAST:event_boundsToggleButtonActionPerformed

    /**
     * Con estas cajas lo que hacemos darle visibilidad a las figuras para poder
     * dibujarlas, tambien se verifica si solo se pueden dibujar fuera de los
     * limites.
     */

    private void squareCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareCheckBoxActionPerformed
        panel.setSquareVisibility(squareCheckBox.isSelected());
        if (justInBounds)
            panel.drawinBounds(false);
        else
            panel.drawFigures(false);
    }//GEN-LAST:event_squareCheckBoxActionPerformed

    private void circleCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circleCheckBoxActionPerformed
        panel.setCircleVisibility(circleCheckBox.isSelected());
        if (justInBounds)
            panel.drawinBounds(false);
        else
            panel.drawFigures(false);
    }//GEN-LAST:event_circleCheckBoxActionPerformed

    private void triangleCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_triangleCheckBoxActionPerformed
        panel.setTriangleVisibility(triangleCheckBox.isSelected());
        if (justInBounds)
            panel.drawinBounds(false);
        else
            panel.drawFigures(false);
    }//GEN-LAST:event_triangleCheckBoxActionPerformed

    private void spiralCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spiralCheckBoxActionPerformed
        panel.setSpiralVisibility(spiralCheckBox.isSelected());
        if (justInBounds)
            panel.drawinBounds(false);
        else
            panel.drawFigures(false);
    }//GEN-LAST:event_spiralCheckBoxActionPerformed

    private void polygonCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_polygonCheckBoxActionPerformed
        panel.setPolygonVisibility(polygonCheckBox.isSelected());
        if (justInBounds)
            panel.drawinBounds(false);
        else
            panel.drawFigures(false);
    }//GEN-LAST:event_polygonCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DemoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField boundsTextField;
    private javax.swing.JToggleButton boundsToggleButton;
    private javax.swing.JButton circleButton;
    private javax.swing.JCheckBox circleCheckBox;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton drawButton;
    private javax.swing.JButton invertedButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private testgraphics.TestGraphics panel;
    private javax.swing.JButton polygonButton;
    private javax.swing.JCheckBox polygonCheckBox;
    private javax.swing.JButton spiralButton;
    private javax.swing.JCheckBox spiralCheckBox;
    private javax.swing.JButton squareButton;
    private javax.swing.JCheckBox squareCheckBox;
    private javax.swing.JButton triangleButton;
    private javax.swing.JCheckBox triangleCheckBox;
    // End of variables declaration//GEN-END:variables
}
